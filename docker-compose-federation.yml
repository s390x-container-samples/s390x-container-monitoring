version: '3.1'

volumes:
    prometheus_data: {}
    grafana_data: {}
    prometheus_server_data: {}

networks:
  front-tier:
  back-tier:

services:

  prometheus:
    image: ${prometheus_image}
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    expose:
      - "9090"
    links:
      - cadvisor:cadvisor
      - alertmanager:alertmanager
    depends_on:
      - cadvisor
    networks:
      - back-tier
    restart: always

  prometheus-server:
    image: ${prometheus_image}
    volumes:
      - ./prometheus_federation/:/etc/prometheus/
      - prometheus_server_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9091:9090
    expose:
      - "9091"
    depends_on:
      - prometheus
    networks:
      - back-tier
    restart: always    

  node-exporter:
    image: ${node_exporter_image}
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    expose:
      - "9100"
    networks:
      - back-tier
    restart: always

  alertmanager:
    image: ${alertmanager_image}
    ports:
      - 9093:9093
        #    volumes:
        # - ./alertmanager/:/etc/alertmanager/
    networks:
      - back-tier
    expose:
      - "9093"
    restart: always
  cadvisor:
    image: ${cadvisor_image}
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080
    expose:
      - "8080"
    networks:
      - back-tier
    restart: always

  grafana:
    image: ${grafana_image}
    user: "0"
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    expose:
      - "3000"    
    volumes:
      - grafana_data:/var/lib/grafana
    env_file:
      - ./grafana/config.monitoring
    networks:
      - back-tier
      - front-tier
    restart: always

